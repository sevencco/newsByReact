{
  "_args": [
    [
      {
        "raw": "rc-table@~5.0.0",
        "scope": null,
        "escapedName": "rc-table",
        "name": "rc-table",
        "rawSpec": "~5.0.0",
        "spec": ">=5.0.0 <5.1.0",
        "type": "range"
      },
      "E:\\reactnews\\node_modules\\antd"
    ]
  ],
  "_from": "rc-table@>=5.0.0 <5.1.0",
  "_id": "rc-table@5.0.6",
  "_inCache": true,
  "_location": "/rc-table",
  "_nodeVersion": "7.1.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/rc-table-5.0.6.tgz_1479438398746_0.4811841081827879"
  },
  "_npmUser": {
    "name": "yesmeck",
    "email": "yesmeck@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {
    "add-dom-event-listener": "1.0.2",
    "classnames": "2.2.5",
    "shallowequal": "0.2.2"
  },
  "_requested": {
    "raw": "rc-table@~5.0.0",
    "scope": null,
    "escapedName": "rc-table",
    "name": "rc-table",
    "rawSpec": "~5.0.0",
    "spec": ">=5.0.0 <5.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-table/-/rc-table-5.0.6.tgz",
  "_shasum": "25d4a5df4fb3a47bbbb4a1c6b523ecc10481b4a7",
  "_shrinkwrap": null,
  "_spec": "rc-table@~5.0.0",
  "_where": "E:\\reactnews\\node_modules\\antd",
  "bugs": {
    "url": "http://github.com/react-component/table/issues"
  },
  "config": {
    "port": 8000
  },
  "dependencies": {
    "object-path": "^0.11.1",
    "rc-util": "3.x",
    "shallowequal": "^0.2.2"
  },
  "description": "table ui component for react",
  "devDependencies": {
    "expect.js": "~0.3.1",
    "jquery": "^1.11.2",
    "pre-commit": "1.x",
    "rc-animate": "^2.3.0",
    "rc-dropdown": "~1.4.10",
    "rc-menu": "~4.13.0",
    "rc-tools": "5.x",
    "react": "^15.2.1",
    "react-addons-test-utils": "^15.3.1",
    "react-dom": "^15.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "25d4a5df4fb3a47bbbb4a1c6b523ecc10481b4a7",
    "tarball": "https://registry.npmjs.org/rc-table/-/rc-table-5.0.6.tgz"
  },
  "files": [
    "lib",
    "assets/*.css"
  ],
  "gitHead": "5549063dc537fa94653946d7bd1b2247ee5da02b",
  "homepage": "http://github.com/react-component/table",
  "keywords": [
    "react",
    "react-table",
    "table",
    "component",
    "ui"
  ],
  "licenses": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "yiminghe@gmail.com"
    },
    {
      "name": "afc163@gmail.com"
    }
  ],
  "name": "rc-table",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-table\n\nReact table component.\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-table.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-table\n[travis-image]: https://img.shields.io/travis/react-component/table.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/table\n[coveralls-image]: https://img.shields.io/coveralls/react-component/table.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/table?branch=master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/table.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/table\n[download-image]: https://img.shields.io/npm/dm/rc-table.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-table\n\n## install\n\n[![rc-table](https://nodei.co/npm/rc-table.png)](https://npmjs.org/package/rc-table)\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://react-component.github.io/table/examples/\n\n## Usage\n\n```js\nimport Table from 'rc-table';\n\nconst columns = [{\n  title: 'Name', dataIndex: 'name', key:'name', width: 100,\n}, {\n  title: 'Age', dataIndex: 'age', key:'age', width: 100,\n}, {\n  title: 'Address', dataIndex: 'address', key:'address', width: 200,\n}, {\n  title: 'Apeartions', dataIndex: '', key:'opeartions', render: () => <a href=\"#\">Delete</a>,\n}];\n\nconst data = [\n  { name: 'Jack', age: 28, address: 'some where', key:'1' },\n  { name: 'Rose', age: 36, address: 'some where', key:'2' },\n];\n\nReact.render(<Table columns={columns} data={data} />, mountNode);\n```\n\n## API\n\n### Properties\n\n<table class=\"table table-bordered table-striped\">\n  <thead>\n    <tr>\n      <th style=\"width: 100px;\">Name</th>\n      <th style=\"width: 50px;\">Type</th>\n      <th>Default</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>prefixCls</td>\n      <td>String</td>\n      <td>rc-table</td>\n      <td></td>\n    </tr>\n    <tr>\n      <td>className</td>\n      <td>String</td>\n      <td></td>\n      <td>additional className</td>\n    </tr>\n    <tr>\n      <td>useFixedHeader</td>\n      <td>Boolean</td>\n      <td>false</td>\n      <td>whether use separator table for header. better set width for columns</td>\n    </tr>\n    <tr>\n      <td>scroll</td>\n      <td>Object</td>\n      <td>{x: false, y: false}</td>\n      <td>whether table can be scroll in x/y direction, `x` or `y` can be a number that indicated the width and height of table body</td>\n    </tr>\n    <tr>\n      <td>expandIconAsCell</td>\n      <td>Boolean</td>\n      <td>false</td>\n      <td>whether render expandIcon as a cell</td>\n    </tr>\n    <tr>\n      <td>expandIconColumnIndex</td>\n      <td>Number</td>\n      <td>0</td>\n      <td>The index of expandIcon which column will be inserted when expandIconAsCell is false</td>\n    </tr>\n    <tr>\n      <td>rowKey</td>\n      <td>string or Function(record, index):string</td>\n      <td>'key'</td>\n      <td>\n        If rowKey is string, `record[rowKey]` will be used as key.\n        If rowKey is function, the return value of `rowKey(record, index)` will be use as key.\n      </td>\n    </tr>\n    <tr>\n      <td>rowClassName</td>\n      <td>Function(record, index, indent):string</td>\n      <td></td>\n      <td>get row's className</td>\n    </tr>\n    <tr>\n      <td>rowRef</td>\n      <td>Function(record, index, indent):string</td>\n      <td></td>\n      <td>get row's ref key</td>\n    </tr>\n    <tr>\n      <td>defaultExpandedRowKeys</td>\n      <td>String[]</td>\n      <td>[]</td>\n      <td>initial expanded rows keys</td>\n    </tr>\n    <tr>\n      <td>expandedRowKeys</td>\n      <td>String[]</td>\n      <td></td>\n      <td>current expanded rows keys</td>\n    </tr>\n    <tr>\n      <td>defaultExpandAllRows</td>\n      <td>Boolean</td>\n      <td>false</td>\n      <td>Expand All Rows initially</td>\n    </tr>\n    <tr>\n      <td>onExpandedRowsChange</td>\n      <td>Function(expandedRows)</td>\n      <td>save the expanded rows in the internal state</td>\n      <td>function to call when the expanded rows change</td>\n    </tr>\n    <tr>\n      <td>onExpand</td>\n      <td>Function(expanded, record)</td>\n      <td></td>\n      <td>function to call when click expand icon</td>\n    </tr>\n    <tr>\n      <td>expandedRowClassName</td>\n      <td>Function(recode, index, indent):string</td>\n      <td></td>\n      <td>get expanded row's className</td>\n    </tr>\n    <tr>\n      <td>data</td>\n      <td>Object[]</td>\n      <td></td>\n      <td>data record array to be rendered</td>\n    </tr>\n    <tr>\n      <td>indentSize</td>\n      <td>Number</td>\n      <td>15</td>\n      <td>indentSize for every level of data.i.children, better using with column.width specified</td>\n    </tr>\n    <tr>\n      <td>onRowClick</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>handle rowClick action, index means the index of current row among fatherElement[childrenColumnName]</td>\n    </tr>\n    <tr>\n      <td>onRowDoubleClick</td>\n      <td>Function(record, index)</td>\n      <td></td>\n      <td>handle rowDoubleClick action, index means the index of current row among fatherElement[childrenColumnName]</td>\n    </tr>\n    <tr>\n      <td>showHeader</td>\n      <td>Boolean</td>\n      <td>true</td>\n      <td>whether table head is shown</td>\n    </tr>\n    <tr>\n      <td>title</td>\n      <td>Function(currentData)</td>\n      <td></td>\n      <td>table title render function</td>\n    </tr>\n    <tr>\n      <td>footer</td>\n      <td>Function(currentData)</td>\n      <td></td>\n      <td>table footer render function</td>\n    </tr>\n    <tr>\n      <td>getBodyWrapper</td>\n      <td>Function(body)</td>\n      <td></td>\n      <td>get wrapper of tbody, [demoe](http://react-component.github.io/table/examples/animation.html)</td>\n    </tr>\n    <tr>\n      <td>emptyText</td>\n      <td>React.Node</td>\n      <td>`No Data`</td>\n      <td>Display text when data is empty</td>\n    </tr>\n    <tr>\n      <td>columns</td>\n      <td>Object[]<Object></td>\n      <td></td>\n      <td>\n        The columns config of table. contains\n        <table>\n          <thead>\n            <tr>\n              <th style=\"width: 100px;\">Name</th>\n              <th style=\"width: 50px;\">Type</th>\n              <th>Default</th>\n              <th>Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>key</td>\n              <td>String</td>\n              <td></td>\n              <td>key of this column</td>\n            </tr>\n            <tr>\n              <td>className</td>\n              <td>String</td>\n              <td></td>\n              <td>className of this column</td>\n            </tr>\n            <tr>\n              <td>colSpan</td>\n              <td>Number</td>\n              <td></td>\n              <td>thead colSpan of this column</td>\n            </tr>\n            <tr>\n              <td>title</td>\n              <td>React Node</td>\n              <td></td>\n              <td>title of this column</td>\n            </tr>\n            <tr>\n              <td>dataIndex</td>\n              <td>String</td>\n              <td></td>\n              <td>display field of the data record</td>\n            </tr>\n            <tr>\n              <td>width</td>\n              <td>String|Number</td>\n              <td></td>\n              <td>width of the specific proportion calculation according to the width of the columns</td>\n            </tr>\n            <tr>\n              <td>fixed</td>\n              <td>String|Boolean</td>\n              <td></td>\n              <td>this column will be fixed when table scroll horizontally: true or 'left' or 'right'</td>\n            </tr>\n            <tr>\n              <td>render</td>\n              <td>Function(value, row, index)</td>\n              <td></td>\n              <td>The render function of cell, has three params: the text of this cell, the record of this row, the index of this row, it's return an object:{ children: value, props: { colSpan: 1, rowSpan:1 } } ==> 'children' is the text of this cell, props is some setting of this cell, eg: 'colspan' set td colspan, 'rowspan' set td rowspan</td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## License\n\nrc-table is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-component/table.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "chrome-test": "rc-tools run chrome-test",
    "coverage": "rc-tools run coverage",
    "gh-pages": "rc-tools run gh-pages",
    "karma": "rc-tools run karma",
    "lint": "rc-tools run lint",
    "lint:fix": "rc-tools run lint --fix",
    "pub": "rc-tools run pub",
    "saucelabs": "rc-tools run saucelabs",
    "start": "rc-tools run server",
    "test": "rc-tools run test"
  },
  "version": "5.0.6"
}
