{
  "_args": [
    [
      {
        "raw": "rc-slider@~5.1.0",
        "scope": null,
        "escapedName": "rc-slider",
        "name": "rc-slider",
        "rawSpec": "~5.1.0",
        "spec": ">=5.1.0 <5.2.0",
        "type": "range"
      },
      "E:\\reactnews\\node_modules\\antd"
    ]
  ],
  "_from": "rc-slider@>=5.1.0 <5.2.0",
  "_id": "rc-slider@5.1.3",
  "_inCache": true,
  "_location": "/rc-slider",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/rc-slider-5.1.3.tgz_1477039529310_0.1625614264048636"
  },
  "_npmUser": {
    "name": "benjycui",
    "email": "benjytrys@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {
    "add-dom-event-listener": "1.0.2",
    "classnames": "2.2.5",
    "shallowequal": "0.2.2"
  },
  "_requested": {
    "raw": "rc-slider@~5.1.0",
    "scope": null,
    "escapedName": "rc-slider",
    "name": "rc-slider",
    "rawSpec": "~5.1.0",
    "spec": ">=5.1.0 <5.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-slider/-/rc-slider-5.1.3.tgz",
  "_shasum": "469a10854460d3a35a8a0c6c7dc7603831e49c95",
  "_shrinkwrap": null,
  "_spec": "rc-slider@~5.1.0",
  "_where": "E:\\reactnews\\node_modules\\antd",
  "author": {
    "name": "sima.zhang1990@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/react-component/slider/issues"
  },
  "config": {
    "port": 8005
  },
  "dependencies": {
    "babel-runtime": "6.x",
    "classnames": "^2.2.5",
    "rc-tooltip": "^3.4.2",
    "rc-util": "^3.2.1",
    "warning": "^3.0.0"
  },
  "description": "slider ui component for react",
  "devDependencies": {
    "expect.js": "0.3.x",
    "pre-commit": "1.x",
    "rc-tools": "^5.6.8",
    "react": "^15.2.1",
    "react-addons-test-utils": "^15.2.1",
    "react-dom": "^15.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "469a10854460d3a35a8a0c6c7dc7603831e49c95",
    "tarball": "https://registry.npmjs.org/rc-slider/-/rc-slider-5.1.3.tgz"
  },
  "files": [
    "assets/*.css",
    "lib"
  ],
  "gitHead": "b325daef48db8d307f1fb67e3c833dad9c5d4e4b",
  "homepage": "http://github.com/react-component/slider",
  "keywords": [
    "react",
    "react-component",
    "react-slider",
    "slider"
  ],
  "licenses": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "benjycui",
      "email": "benjytrys@gmail.com"
    },
    {
      "name": "simaq",
      "email": "sima.zhang1990@gmail.com"
    },
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    }
  ],
  "name": "rc-slider",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-slider\n---\n\nslider ui component for react\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![node version][node-image]][node-url]\n[![npm download][download-image]][download-url]\n[![Sauce Test Status](https://saucelabs.com/buildstatus/rc-slider)](https://saucelabs.com/u/rc-slider)\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/rc-slider.svg)](https://saucelabs.com/u/rc-slider)\n\n[npm-image]: http://img.shields.io/npm/v/rc-slider.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-slider\n[travis-image]: https://img.shields.io/travis/react-component/slider.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/slider\n[coveralls-image]: https://img.shields.io/coveralls/react-component/slider.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/slider?branch=master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/slider.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/slider\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/rc-slider.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-slider\n\n## Screenshots\n\n<img src=\"https://t.alipayobjects.com/images/T1ki8fXeprXXXXXXXX.png\" width=\"550\"/>\n\n<img src=\"https://t.alipayobjects.com/images/T1pPhfXhBqXXXXXXXX.png\" width=\"550\"/>\n\n<img src=\"https://t.alipayobjects.com/images/T1wO8fXd4rXXXXXXXX.png\" width=\"550\"/>\n\n<img src=\"http://i.giphy.com/l46Cs36c9HrHMExoc.gif\"/>\n\n\n## Feature\n\n* support ie8,ie8+,chrome,firefox,safari\n\n### Keyboard\n\n\n\n## install\n\n[![rc-slider](https://nodei.co/npm/rc-slider.png)](https://npmjs.org/package/rc-slider)\n\n## Usage\n\n```js\nrequire('rc-slider/assets/index.css');\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar Rcslider = require('rc-slider');\nReactDOM.render(<Rcslider />, container);\n```\n\n## API\n\n### props\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th style=\"width: 50px;\">default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n        <tr>\n          <td>className</td>\n          <td>String</td>\n          <td>rc-slider</td>\n          <td>Additional css class for the root dom node</td>\n        </tr>\n        <tr>\n          <td>min</td>\n          <td>number</td>\n          <td>0</td>\n          <td>The minimum value of the slider</td>\n        </tr>\n        <tr>\n          <td>max</td>\n          <td>number</td>\n          <td>100</td>\n          <td>The maximum value of the slider</td>\n        </tr>\n        <tr>\n          <td>marks</td>\n          <td>object{number: string} or object{number: object{ style, label }}</td>\n          <td>{}</td>\n          <td>Mark on the slider. The key determines the position, and the value determines what will show. If you want to set the style of a specific mark point, the value should be an object which contains `style` and `label` properties.</td>\n        </tr>\n        <tr>\n          <td>step</td>\n          <td>number or `null`</td>\n          <td>1</td>\n          <td>Value to be added or subtracted on each step the slider makes. Must be greater than zero. max - min should be evenly divisible by the step value. When `marks` is not an empty object, `step` can be set to `null`, to make marks as steps.</td>\n        </tr>\n        <tr>\n          <td>range</td>\n          <td>boolean or number</td>\n          <td>false</td>\n          <td>Determines the type of slider. If range is `true`, two handles will be rendered in order to select a range. If range is a number, multiple handles will be rendered (number + 1). Using `range={true}` is equivalent to `range={1}`.</td>\n        </tr>\n        <tr>\n          <td>allowCross</td>\n          <td>boolean</td>\n          <td>true</td>\n          <td>When `range` is `true`, `allowCross` could be set as `true` to allow those handles to cross.</td>\n        </tr>\n        <tr>\n          <td>pushable</td>\n          <td>boolean or number</td>\n          <td>true</td>\n          <td>When `range` is `true`, `pushable` could be set as `true` to allow pushing of surrounding handles when moving an handle. When set to a number, the number will be the minimum ensured distance between handles. Example: <img src=\"http://i.giphy.com/l46Cs36c9HrHMExoc.gif\"/></td>\n        </tr>\n        <tr>\n          <td>vertical</td>\n          <td>boolean</td>\n          <td>false</td>\n          <td>If vertical is `true`, the slider will be vertical.</td>\n        </tr>\n        <tr>\n          <td>defaultValue</td>\n          <td>number or [number, number, ...]</td>\n          <td>0 or [0, 0]</td>\n          <td>Set initial positions of handles. If range is `false`, the type of `defaultValue` should be `number`. Otherwise, `[number, number, ...]`</td>\n        </tr>\n        <tr>\n          <td>value</td>\n          <td>number or [number, number, ...]</td>\n          <td></td>\n          <td>Set current positions of handles. If range is `false`, the type of `defaultValue` should be `number`. Otherwise, `[number, number, ...]`</td>\n        </tr>\n        <tr>\n          <td>handle</td>\n          <td>Component</td>\n          <td></td>\n          <td>Provide a custom Handle to use in the slider by passing a component. This component will have a `value` and `offset` props used to define custom styling/content.</td>\n        </tr>\n        <tr>\n          <td>included</td>\n          <td>boolean</td>\n          <td>true</td>\n          <td>If the value is `true`, it means a continuous value interval, otherwise, it is a independent value.</td>\n        </tr>\n        <tr>\n          <td>disabled</td>\n          <td>boolean</td>\n          <td>false</td>\n          <td>If `true`, handles can't be moved.</td>\n        </tr>\n        <tr>\n          <td>tipTransitionName</td>\n          <td>string</td>\n          <td>''</td>\n          <td>Set the animation for tooltip if it shows.</td>\n        </tr>\n        <tr>\n          <td>tipFormatter</td>\n          <td>function or `null`</td>\n          <td></td>\n          <td>Format the value of the tooltip if it shows. If `null` the tooltip will always be hidden.</td>\n        </tr>\n        <tr>\n          <td>dots</td>\n          <td>bool</td>\n          <td>false</td>\n          <td>When the `step` value is greater than 1, you can set the `dots` to  `true` if you want to render the slider with dots.</td>\n        </tr>\n        <tr>\n          <td>onChange</td>\n          <td>function</td>\n          <td>NOOP</td>\n          <td>`onChange` will be triggered while the value of Slider changing.</td>\n        </tr>\n        <tr>\n          <td>onAfterChange</td>\n          <td>function</td>\n          <td>NOOP</td>\n          <td>`onAfterChange` will be triggered when `ontouchend` or `onmouseup` is triggered.</td>\n        </tr>\n    </tbody>\n</table>\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8005/examples/\n\nonline example: http://react-component.github.io/slider/\n\n## Test Case\n\nhttp://localhost:8005/tests/runner.html?coverage\n\n## Coverage\n\nhttp://localhost:8005/node_modules/rc-server/node_modules/node-jscover/lib/front-end/jscoverage.html?w=http://localhost:8088/tests/runner.html?coverage\n\n## License\n\nrc-slider is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-component/slider.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "chrome-test": "rc-tools run chrome-test",
    "coverage": "rc-tools run coverage",
    "gh-pages": "rc-tools run gh-pages",
    "karma": "rc-tools run karma",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub --babel-runtime",
    "saucelabs": "rc-tools run saucelabs",
    "start": "rc-tools run server",
    "test": "rc-tools run test"
  },
  "style": "./assets/index.css",
  "version": "5.1.3"
}
