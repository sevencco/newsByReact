{
  "_args": [
    [
      {
        "raw": "rc-tabs@~7.0.5",
        "scope": null,
        "escapedName": "rc-tabs",
        "name": "rc-tabs",
        "rawSpec": "~7.0.5",
        "spec": ">=7.0.5 <7.1.0",
        "type": "range"
      },
      "E:\\reactnews\\node_modules\\antd"
    ]
  ],
  "_from": "rc-tabs@>=7.0.5 <7.1.0",
  "_id": "rc-tabs@7.0.13",
  "_inCache": true,
  "_location": "/rc-tabs",
  "_nodeVersion": "4.6.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/rc-tabs-7.0.13.tgz_1479094303253_0.5093176052905619"
  },
  "_npmUser": {
    "name": "yiminghe",
    "email": "yiminghe@gmail.com"
  },
  "_npmVersion": "4.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rc-tabs@~7.0.5",
    "scope": null,
    "escapedName": "rc-tabs",
    "name": "rc-tabs",
    "rawSpec": "~7.0.5",
    "spec": ">=7.0.5 <7.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-tabs/-/rc-tabs-7.0.13.tgz",
  "_shasum": "b656b5812c452029701a99f5a54de67dcbfc9588",
  "_shrinkwrap": null,
  "_spec": "rc-tabs@~7.0.5",
  "_where": "E:\\reactnews\\node_modules\\antd",
  "author": {
    "name": "yiminghe@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/react-component/tabs/issues"
  },
  "config": {
    "port": 8002
  },
  "dependencies": {
    "babel-runtime": "6.x",
    "classnames": "2.x",
    "react-hammerjs": "~0.5.0"
  },
  "description": "tabs ui component for react",
  "devDependencies": {
    "expect.js": "~0.3.1",
    "fastclick": "~1.0.6",
    "history": "^1.17.0",
    "pre-commit": "1.x",
    "rc-tools": "5.x",
    "react": "15.x",
    "react-addons-test-utils": "15.x",
    "react-dom": "15.x",
    "react-router": "2.x"
  },
  "directories": {},
  "dist": {
    "shasum": "b656b5812c452029701a99f5a54de67dcbfc9588",
    "tarball": "https://registry.npmjs.org/rc-tabs/-/rc-tabs-7.0.13.tgz"
  },
  "files": [
    "lib",
    "assets/*.css"
  ],
  "gitHead": "6b895e1d18200d7620ad975e7eaf850dd2590cfc",
  "homepage": "http://github.com/react-component/tabs",
  "keywords": [
    "react",
    "react-component",
    "react-tabs"
  ],
  "licenses": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "afc163",
      "email": "afc163@gmail.com"
    },
    {
      "name": "dxq613",
      "email": "dxq613@gmail.com"
    },
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    }
  ],
  "name": "rc-tabs",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-tabs\n---\n\nReact Tabs\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-tabs.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-tabs\n[travis-image]: https://img.shields.io/travis/react-component/tabs.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/tabs\n[coveralls-image]: https://img.shields.io/coveralls/react-component/tabs.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/tabs?branch=master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/tabs.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/tabs\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/rc-tabs.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-tabs\n\n## Screenshot\n\n<img src='https://zos.alipayobjects.com/rmsportal/JwLASrsOYJuFRIt.png' width='408'>\n\n## Example\n\nhttp://localhost:8000/examples\n\nonline example: http://react-component.github.io/tabs/\n\n## install\n\n[![rc-tabs](https://nodei.co/npm/rc-tabs.png)](https://npmjs.org/package/rc-tabs)\n\n## Feature\n\n### Keyboard\n\n* left and up: switch to previous tab\n* right and down: switch to next tab\n\n## Usage\n\n```js\nimport Tabs, { TabPane } from 'rc-tabs';\nimport TabContent from 'rc-tabs/lib/TabContent';\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\n\nvar callback = function(key){\n\n}\n\nReact.render(\n  (\n    <Tabs\n      defaultActiveKey=\"2\"\n      onChange={callback}\n      renderTabBar={()=><ScrollableInkTabBar />}\n      renderTabContent={()=><TabContent />}\n    >\n      <TabPane tab='tab 1' key=\"1\">first</TabPane>\n      <TabPane tab='tab 2' key=\"2\">second</TabPane>\n      <TabPane tab='tab 3' key=\"3\">third</TabPane>\n    </Tabs>\n  ),\n  document.getElementById('t2'));\n```\n\n## API \n\n### Tabs\n\n#### props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th>default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>activeKey</td>\n          <td>String</td>\n          <th></th>\n          <td>current active tabPanel's key</td>\n      </tr>\n      <tr>\n          <td>tabBarPosition</td>\n          <td>String</td>\n          <th></th>\n          <td>tab nav 's position. one of ['left','right','top','bottom']</td>\n      </tr>\n      <tr>\n          <td>defaultActiveKey</td>\n          <td>String</td>\n          <th>first active tabPanel's key</th>\n          <td>initial active tabPanel's key if activeKey is absent</td>\n      </tr>\n      <tr>\n         <td>renderTabBar</td>\n         <td>():React.Node</td>\n         <th></th>\n         <td>How to render tab bar</td>\n      </tr>\n      <tr>\n        <td>renderTabContent</td>\n        <td>():React.Node</td>\n        <th></th>\n        <td>How to render tab content</td>\n      </tr>\n      <tr>\n          <td>onChange</td>\n          <td>(key: string): void</td>\n          <th></th>\n          <td>called when tabPanel is changed</td>\n      </tr>\n      <tr>\n          <td>destroyInactiveTabPane</td>\n          <td>Boolean</td>\n          <th>false</th>\n          <td>whether destroy inactive tabpane when change tab</td>\n      </tr>\n    </tbody>\n</table>\n\n### TabPane\n\n#### props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr>\n          <th style=\"width: 100px;\">name</th>\n          <th style=\"width: 50px;\">type</th>\n          <th>default</th>\n          <th>description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>key</td>\n          <td>Object</td>\n          <th></th>\n          <td>corresponding to activeKey</td>\n      </tr>\n      <tr>\n          <td>style</td>\n          <td>Object</td>\n          <th></th>\n          <td></td>\n      </tr>\n      <tr>\n         <td>placeholder</td>\n         <td>React.Node</td>\n         <th></th>\n         <td>lazyrender children</td>\n      </tr>\n      <tr>\n          <td>tab</td>\n          <td>React.Node</td>\n          <th></th>\n          <td>current tab's title corresponding to current tabPane</td>\n      </tr>\n    </tbody>\n</table>\n\n### lib/TabBar\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr>\n          <th style=\"width: 100px;\">name</th>\n          <th style=\"width: 50px;\">type</th>\n          <th>default</th>\n          <th>description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>onTabClick</td>\n          <td>(key: string): void</td>\n          <th></th>\n          <td>callback when tab clicked</td>\n      </tr>\n      <tr>\n          <td>style</td>\n          <td></td>\n          <th></th>\n          <td>bar style</td>\n      </tr>\n      <tr>\n        <td>extraContent</td>\n        <td>React Node</td>\n        <th></th>\n        <td>extra content placed one the right of tab bar</td>\n      </tr>\n    </tbody>\n</table>\n\n### lib/InkTabBar\n\ntab bar with ink indicator, in addition to tab bar props, extra props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr>\n          <th style=\"width: 100px;\">name</th>\n          <th style=\"width: 50px;\">type</th>\n          <th>default</th>\n          <th>description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>styles</td>\n          <td>{ inkBar }</td>\n          <th></th>\n          <td>can set inkBar style</td>\n      </tr>\n    </tbody>\n</table>\n\n### lib/ScrollableInkTabBar\n\nscrollable tab bar with ink indicator, same with tab bar/ink bar props.\n\n### lib/TabContent\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr>\n          <th style=\"width: 100px;\">name</th>\n          <th style=\"width: 50px;\">type</th>\n          <th>default</th>\n          <th>description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>style</td>\n          <td>{}</td>\n          <th></th>\n          <td>tab content style</td>\n      </tr>\n      <tr>\n          <td>animated</td>\n          <td>true</td>\n          <th></th>\n          <td>whether tabpane change with animation</td>\n      </tr>      \n    </tbody>\n</table>\n\n### lib/SwipeableTabContent\n\nswipeable tab panes, in addition to lib/TabContent props, extra props: \n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n      <tr>\n          <th style=\"width: 100px;\">name</th>\n          <th style=\"width: 50px;\">type</th>\n          <th>default</th>\n          <th>description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>hammerOptions</td>\n          <td>{}</td>\n          <th></th>\n          <td>options for react-hammerjs</td>\n      </tr>\n    </tbody>\n</table>\n\n## Note\n\nIf you want to support old browsers(which does not support flex/css-transition),\nplease load the following script inside head to add no-flexbox/no-csstransition css classes\n\n```\nhttps://as.alipayobjects.com/g/component/modernizr/2.8.3/modernizr.min.js\n```\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Test Case\n\n```\nnpm test\nnpm run chrome-test\n```\n\n## Coverage\n\n```\nnpm run coverage\n```\n\nopen coverage/ dir\n\n## License\n\nrc-tabs is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/react-component/tabs.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "chrome-test": "rc-tools run chrome-test",
    "coverage": "rc-tools run coverage",
    "gh-pages": "rc-tools run gh-pages",
    "karma": "rc-tools run karma",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub --babel-runtime",
    "saucelabs": "rc-tools run saucelabs",
    "start": "rc-tools run server",
    "test": "rc-tools run test"
  },
  "version": "7.0.13"
}
