{
  "_args": [
    [
      {
        "raw": "gregorian-calendar-format@~4.1.0",
        "scope": null,
        "escapedName": "gregorian-calendar-format",
        "name": "gregorian-calendar-format",
        "rawSpec": "~4.1.0",
        "spec": ">=4.1.0 <4.2.0",
        "type": "range"
      },
      "E:\\reactnews\\node_modules\\antd"
    ]
  ],
  "_from": "gregorian-calendar-format@>=4.1.0 <4.2.0",
  "_id": "gregorian-calendar-format@4.1.3",
  "_inCache": true,
  "_location": "/gregorian-calendar-format",
  "_nodeVersion": "4.4.5",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/gregorian-calendar-format-4.1.3.tgz_1465974397486_0.5824379390105605"
  },
  "_npmUser": {
    "name": "yiminghe",
    "email": "yiminghe@gmail.com"
  },
  "_npmVersion": "3.9.5",
  "_phantomChildren": {
    "loose-envify": "1.3.1"
  },
  "_requested": {
    "raw": "gregorian-calendar-format@~4.1.0",
    "scope": null,
    "escapedName": "gregorian-calendar-format",
    "name": "gregorian-calendar-format",
    "rawSpec": "~4.1.0",
    "spec": ">=4.1.0 <4.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/gregorian-calendar-format/-/gregorian-calendar-format-4.1.3.tgz",
  "_shasum": "d93e6b68996402c5f5274fec8811fffe0ab97248",
  "_shrinkwrap": null,
  "_spec": "gregorian-calendar-format@~4.1.0",
  "_where": "E:\\reactnews\\node_modules\\antd",
  "author": {
    "name": "yiminghe",
    "email": "yiminghe@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yiminghe/gregorian-calendar-format/issues"
  },
  "config": {
    "port": 8012
  },
  "dependencies": {
    "gregorian-calendar": "4.x",
    "warning": "2.x"
  },
  "description": "format utils for gregorian-calendar",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "pre-commit": "1.x",
    "rc-server": "3.x",
    "rc-tools": "4.x"
  },
  "directories": {},
  "dist": {
    "shasum": "d93e6b68996402c5f5274fec8811fffe0ab97248",
    "tarball": "https://registry.npmjs.org/gregorian-calendar-format/-/gregorian-calendar-format-4.1.3.tgz"
  },
  "files": [
    "lib"
  ],
  "gitHead": "6432ff5f73f48de3317d1508b356813301ae7265",
  "homepage": "https://github.com/yiminghe/gregorian-calendar-format#readme",
  "keywords": [
    "gregorian-calendar",
    "format",
    "moment",
    "date",
    "time",
    "util"
  ],
  "license": "MIT",
  "main": "./lib/gregorian-calendar-format",
  "maintainers": [
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    }
  ],
  "name": "gregorian-calendar-format",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# gregorian-calendar-format\n---\n\nformat [gregorian-calendar](https://github.com/yiminghe/gregorian-calendar) instance\n\n[![gregorian-calendar-format](https://nodei.co/npm/gregorian-calendar-format.png)](https://npmjs.org/package/gregorian-calendar-format)\n[![NPM downloads](http://img.shields.io/npm/dm/gregorian-calendar-format.svg)](https://npmjs.org/package/gregorian-calendar-format)\n[![Build Status](https://secure.travis-ci.org/yiminghe/gregorian-calendar-format.png?branch=master)](https://travis-ci.org/yiminghe/gregorian-calendar-format)\n[![Coverage Status](https://img.shields.io/coveralls/yiminghe/gregorian-calendar-format.svg)](https://coveralls.io/r/yiminghe/gregorian-calendar-format?branch=master)\n[![Dependency Status](https://gemnasium.com/yiminghe/gregorian-calendar-format.png)](https://gemnasium.com/yiminghe/gregorian-calendar-format)\n[![node version](https://img.shields.io/badge/node.js-%3E=_0.11-green.svg?style=flat-square)](http://nodejs.org/download/)\n\n\n## use on node\n\n```js\nvar GregorianCalendarFormat = require('gregorian-calendar-format');\nvar GregorianCalendar = require('gregorian-calendar');\nvar gregorianCalendar = new GregorianCalendar();\ngregorianCalendar.set(2013, GregorianCalendar.JULY, 9);\nvar df = new GregorianCalendarFormat('yyyy-MM-dd');\nconsole.log(df.format(gregorianCalendar));\ndf = new GregorianCalendarFormat('yy-MM-dd');\nconsole.log(df.format(gregorianCalendar));\n```\n\n## API\n\n### Constructor GregorianCalendarFormat(pattern: String, locale: Object)\n\n* pattern: pattern string used to format or parse\n\n<table border=\"1\">\n    <thead valign=\"bottom\">\n        <tr>\n            <th class=\"head\">Letter</th>\n            <th class=\"head\">Date or Time Component</th>\n            <th class=\"head\">Presentation</th>\n            <th class=\"head\">Examples</th>\n        </tr>\n    </thead>\n    <tbody valign=\"top\">\n        <tr>\n            <td>G</td>\n            <td>Era designator</td>\n            <td>Text</td>\n            <td>AD</td>\n        </tr>\n        <tr>\n            <td>y</td>\n            <td>Year</td>\n            <td>Year</td>\n            <td>1996; 96</td>\n        </tr>\n        <tr>\n            <td>Y</td>\n            <td>WeekYear</td>\n            <td>WeekYear</td>\n            <td>1996; 96</td>\n        </tr>\n        <tr>\n            <td>M</td>\n            <td>Month in year</td>\n            <td>Month</td>\n            <td>number of M matter. such as: MM:01 MMM:Jan MMMM: January</td>\n        </tr>\n        <tr>\n            <td>w</td>\n            <td>Week in year</td>\n            <td>Number</td>\n            <td>27</td>\n        </tr>\n        <tr>\n            <td>W</td>\n            <td>Week in month</td>\n            <td>Number</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>D</td>\n            <td>Day in year</td>\n            <td>Number</td>\n            <td>189</td>\n        </tr>\n        <tr>\n            <td>d</td>\n            <td>Day in month</td>\n            <td>Number</td>\n            <td>10</td>\n        </tr>\n        <tr>\n            <td>F</td>\n            <td>Day of week in month</td>\n            <td>Number</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>E</td>\n            <td>Day in week</td>\n            <td>Text</td>\n            <td>number of E matter. such as: EEEE: Sunday, EEE: Sun</td>\n        </tr>\n        <tr>\n            <td>a</td>\n            <td>Am/pm marker</td>\n            <td>Text</td>\n            <td>PM</td>\n        </tr>\n        <tr>\n            <td>H</td>\n            <td>Hour in day (0-23)</td>\n            <td>Number</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>k</td>\n            <td>Hour in day (1-24)</td>\n            <td>Number</td>\n            <td>24</td>\n        </tr>\n        <tr>\n            <td>K</td>\n            <td>Hour in am/pm (0-11)</td>\n            <td>Number</td>\n            <td>0</td>\n        </tr>\n        <tr>\n            <td>h</td>\n            <td>Hour in am/pm (1-12)</td>\n            <td>Number</td>\n            <td>12</td>\n        </tr>\n        <tr>\n            <td>m</td>\n            <td>Minute in hour</td>\n            <td>Number</td>\n            <td>30</td>\n        </tr>\n        <tr>\n            <td>s</td>\n            <td>Second in minute</td>\n            <td>Number</td>\n            <td>55</td>\n        </tr>\n        <tr>\n            <td>S</td>\n            <td>Millisecond</td>\n            <td>Number</td>\n            <td>978</td>\n        </tr>\n        <tr>\n            <td>x/z</td>\n            <td>Time zone</td>\n            <td>General time zone</td>\n            <td>Pacific Standard Time; PST; GMT-08:00</td>\n        </tr>\n        <tr>\n            <td>Z</td>\n            <td>Time zone</td>\n            <td>RFC 822 time zone</td>\n            <td>-0800</td>\n        </tr>\n    </tbody>\n</table>\n\nsuch as \"yyyy-MM-dd'日'\" will parse and format \"2013-11-12日\" \"2013-01-02日\". (content inside '' will preserve)\n\n* locale: require('gregorian-calendar-format/locale/en_US') or require('gregorian-calendar-format/locale/zh_CN') specify text when render localize date time string.\n\n#### String GregorianCalendarFormat.prototype.format(calendar: GregorianCalendar)\n\nformat an instance of GregorianCalendar according to pattern\n\n#### GregorianCalendar GregorianCalendarFormat.prototype.parse(dateString: String, {locale: object})\n\nparse a dateString to an instance of GregorianCalendar according to pattern, it's better to specify calendarLocale, such as\n\n```js\ndf.parse('2013-11-12', {locale: require('gregorian-calendar/lib/locale/zh_CN'}));\n```\n\n### GregorianCalendarFormat GregorianCalendarFormat.getDateTimeInstance(dateStyle, timeStyle, locale)\n\nget a predefine GregorianCalendarFormat instance\n\n* dateStyle: enum of predefined date style, enums:\n - en_US:\n   - GregorianCalendarFormat.Style.FULL presents EEEE, MMMM d, yyyy\n   - GregorianCalendarFormat.Style.LONG presents MMMM d, yyyy\n   - GregorianCalendarFormat.Style.MEDIUM presents MMM d, yyyy\n   - GregorianCalendarFormat.Style.SHORT presents M/d/yy\n - zh_CN:\n   - GregorianCalendarFormat.Style.FULL presents \"yyyy'年'M'月'd'日' EEEE\"\n   - GregorianCalendarFormat.Style.LONG presents \"yyyy'年'M'月'd'日'\"\n   - GregorianCalendarFormat.Style.MEDIUM presents \"yyyy-M-d\"\n   - GregorianCalendarFormat.Style.SHORT presents \"yy-M-d\"\n\n* timeStyle: enum of predefined date style, enums:\n - en_US:\n   - GregorianCalendarFormat.Style.FULL presents 'h:mm:ss a \\'GMT\\'Z'\n   - GregorianCalendarFormat.Style.LONG presents 'h:mm:ss a'\n   - GregorianCalendarFormat.Style.MEDIUM presents 'h:mm:ss a'\n   - GregorianCalendarFormat.Style.SHORT presents 'h:mm a'\n - zh_CN:\n   - GregorianCalendarFormat.Style.FULL presents \"ahh'时'mm'分'ss'秒' 'GMT'Z\"\n   - GregorianCalendarFormat.Style.LONG presents \"ahh'时'mm'分'ss'秒'\"\n   - GregorianCalendarFormat.Style.MEDIUM presents \"H:mm:ss\"\n   - GregorianCalendarFormat.Style.SHORT presents \"ah:mm\"\n\n* locale: require('gregorian-calendar-format/locale/en_US') or require('gregorian-calendar-format/locale/zh_CN') specify text when render localize date time string.\n\n\n## License\n\ngregorian-calendar-format is released under the MIT license.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/yiminghe/gregorian-calendar-format.git"
  },
  "scripts": {
    "browser-test": "rc-tools run browser-test",
    "browser-test-cover": "rc-tools run browser-test-cover",
    "build": "rc-tools run build",
    "gh-pages": "rc-tools run gh-pages",
    "karma": "rc-tools run karma",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub",
    "saucelabs": "rc-tools run saucelabs",
    "start": "rc-server"
  },
  "version": "4.1.3"
}
