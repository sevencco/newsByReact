{
  "_args": [
    [
      {
        "raw": "rc-tree-select@~1.8.0",
        "scope": null,
        "escapedName": "rc-tree-select",
        "name": "rc-tree-select",
        "rawSpec": "~1.8.0",
        "spec": ">=1.8.0 <1.9.0",
        "type": "range"
      },
      "E:\\reactnews\\node_modules\\antd"
    ]
  ],
  "_from": "rc-tree-select@>=1.8.0 <1.9.0",
  "_id": "rc-tree-select@1.8.7",
  "_inCache": true,
  "_location": "/rc-tree-select",
  "_nodeVersion": "7.1.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/rc-tree-select-1.8.7.tgz_1484190737686_0.37687338166870177"
  },
  "_npmUser": {
    "name": "yesmeck",
    "email": "yesmeck@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {
    "add-dom-event-listener": "1.0.2",
    "classnames": "2.2.5",
    "shallowequal": "0.2.2"
  },
  "_requested": {
    "raw": "rc-tree-select@~1.8.0",
    "scope": null,
    "escapedName": "rc-tree-select",
    "name": "rc-tree-select",
    "rawSpec": "~1.8.0",
    "spec": ">=1.8.0 <1.9.0",
    "type": "range"
  },
  "_requiredBy": [
    "/antd"
  ],
  "_resolved": "https://registry.npmjs.org/rc-tree-select/-/rc-tree-select-1.8.7.tgz",
  "_shasum": "25a9547e403b53790922414991eb85e362d7d5b2",
  "_shrinkwrap": null,
  "_spec": "rc-tree-select@~1.8.0",
  "_where": "E:\\reactnews\\node_modules\\antd",
  "author": {
    "name": "hualei5280@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/react-component/tree-select/issues"
  },
  "config": {
    "port": 8007
  },
  "dependencies": {
    "classnames": "^2.2.1",
    "object-assign": "^4.0.1",
    "rc-animate": "^2.0.2",
    "rc-tree": "^1.3.0",
    "rc-trigger": "1.x",
    "rc-util": "^3.1.2"
  },
  "description": "tree-select ui component for react",
  "devDependencies": {
    "coveralls": "^2.11.15",
    "enzyme": "^2.7.0",
    "enzyme-to-json": "^1.4.5",
    "es6-promise": "^3.0.2",
    "expect.js": "0.3.x",
    "jest": "^18.1.0",
    "jquery": "^2.2.0",
    "pre-commit": "1.x",
    "rc-dialog": "^6.0.3",
    "rc-form": "^0.7.3",
    "rc-select": "^5.4.0",
    "rc-tools": "^5.3.4",
    "react": "15.x",
    "react-addons-test-utils": "15.x",
    "react-dom": "15.x"
  },
  "directories": {},
  "dist": {
    "shasum": "25a9547e403b53790922414991eb85e362d7d5b2",
    "tarball": "https://registry.npmjs.org/rc-tree-select/-/rc-tree-select-1.8.7.tgz"
  },
  "files": [
    "lib",
    "assets/*.css"
  ],
  "gitHead": "024b394bcd8321d0b130e5f174ff2acc2bbc4e5e",
  "homepage": "https://github.com/react-component/tree-select",
  "jest": {
    "setupFiles": [
      "./tests/setup.js"
    ],
    "collectCoverageFrom": [
      "src/**/*"
    ]
  },
  "keywords": [
    "react",
    "react-component",
    "react-tree-select",
    "tree-select"
  ],
  "licenses": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "warmhug",
      "email": "hualei5280@gmail.com"
    },
    {
      "name": "yesmeck",
      "email": "yesmeck@gmail.com"
    },
    {
      "name": "yiminghe",
      "email": "yiminghe@gmail.com"
    }
  ],
  "name": "rc-tree-select",
  "optionalDependencies": {},
  "pre-commit": [
    "lint"
  ],
  "readme": "# rc-tree-select\n---\n\nReact TreeSelect Component\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![gemnasium deps][gemnasium-image]][gemnasium-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: http://img.shields.io/npm/v/rc-tree-select.svg?style=flat-square\n[npm-url]: http://npmjs.org/package/rc-tree-select\n[travis-image]: https://img.shields.io/travis/react-component/tree-select.svg?style=flat-square\n[travis-url]: https://travis-ci.org/react-component/tree-select\n[coveralls-image]: https://img.shields.io/coveralls/react-component/tree-select.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/react-component/tree-select?branch=master\n[gemnasium-image]: http://img.shields.io/gemnasium/react-component/tree-select.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/react-component/tree-select\n[node-image]: https://img.shields.io/badge/node.js-%3E=_0.10-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[download-image]: https://img.shields.io/npm/dm/rc-tree-select.svg?style=flat-square\n[download-url]: https://npmjs.org/package/rc-tree-select\n\n\n## Screenshots\n\n<img src=\"https://os.alipayobjects.com/rmsportal/HUhyhmpWyiGKnZF.png\" width=\"288\"/>\n\n\n## Development\n\n```\nnpm install\nnpm start\n```\n\n## Example\n\nhttp://localhost:8000/examples/\n\nonline example: http://react-component.github.io/tree-select/\n\n## install\n\n[![rc-tree-select](https://nodei.co/npm/rc-tree-select.png)](https://npmjs.org/package/rc-tree-select)\n\n## API\n\n### TreeSelect props\n\n| name     | description    | type     | default      |\n|----------|----------------|----------|--------------|\n|className | additional css class of root dom node | String | '' |\n|prefixCls | prefix class | String | '' |\n|animation | dropdown animation name. only support slide-up now | String | '' |\n|transitionName | dropdown css animation name | String | '' |\n|choiceTransitionName | css animation name for selected items at multiple mode | String | '' |\n|dropdownMatchSelectWidth | whether dropdown's with is same with select | bool | true |\n|dropdownClassName | additional className applied to dropdown | String | - |\n|dropdownStyle | additional style applied to dropdown | Object | {} |\n|dropdownPopupAlign | specify alignment for dropdown (alignConfig of [dom-align](https://github.com/yiminghe/dom-align)) | Object | - |\n|onDropdownVisibleChange | control dropdown visible | function | `() => { return true; }` |\n|notFoundContent | specify content to show when no result matches. | String | 'Not Found' |\n|showSearch | whether show search input in single mode | bool | true |\n|allowClear | whether allowClear | bool | false |\n|maxTagTextLength | max tag text length to show | number | - |\n|multiple | whether multiple select (true when enable treeCheckable) | bool | false |\n|disabled | whether disabled select | bool | false |\n|inputValue | if enable search, you can set default input's value, if set to null, auto clear input value when finish select/unselect operation | string/null | '' |\n|defaultValue | initial selected treeNode(s) | same as value type | - |\n|value | current selected treeNode(s). | normal: String/Array<String>. labelInValue: {value:String,label:React.Node}/Array<{value,label}>. treeCheckStrictly(halfChecked default false): {value:String,label:React.Node, halfChecked}/Array<{value,label,halfChecked}>. | - |\n|labelInValue| whether to embed label in value, see above value type | Bool | false |\n|onChange | called when select treeNode or input value change | function(value, label(null), extra) | - |\n|onSelect | called when select treeNode | function(value, node, extra) | - |\n|onSearch | called when input changed | function | - |\n|showCheckedStrategy | `TreeSelect.SHOW_ALL`: show all checked treeNodes (Include parent treeNode). `TreeSelect.SHOW_PARENT`: show checked treeNodes (Just show parent treeNode). Default just show child. | enum{TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD } | TreeSelect.SHOW_CHILD |\n|treeIcon | show tree icon | bool | false |\n|treeLine | show tree line | bool | false |\n|treeDefaultExpandAll | default expand all treeNode | bool | false |\n|treeCheckable | whether tree show checkbox (select callback will not fire) | bool | false |\n|treeCheckStrictly | check node precisely, parent and children nodes are not associated| bool | false |\n|filterTreeNode | whether filter treeNodes by input value. default filter by treeNode's treeNodeFilterProp prop's value | bool/Function(inputValue:string, treeNode:TreeNode) | Function |\n|treeNodeFilterProp | which prop value of treeNode will be used for filter if filterTreeNode return true | String | 'value' |\n|treeNodeLabelProp | which prop value of treeNode will render as content of select | String | 'title' |\n|treeData | treeNodes data Array, if set it then you need not to construct children TreeNode. (value should be unique across the whole array) | array<{value,label,children, [disabled,selectable]}> | [] |\n|treeDataSimpleMode | enable simple mode of treeData.(treeData should be like this: [{id:1, pId:0, value:'1', label:\"test1\",...},...], `pId` is parent node's id) | bool/object{id:'id', pId:'pId', rootPId:null} | false |\n|loadData | load data asynchronously | function(node) | - |\n|getPopupContainer | container which popup select menu rendered into | function(trigger:Node):Node | function(){return document.body;} |\n\n### TreeNode props\n> note: you'd better to use `treeData` instead of using TreeNode.\n\n| name     | description    | type     | default      |\n|----------|----------------|----------|--------------|\n|disabled | disable treeNode | bool | false |\n|key | it's value must be unique across the tree's all TreeNode, you must set it  | String | - |\n|value | default as treeNodeFilterProp (be unique across the tree's all TreeNode) | String | '' |\n|title | tree/subTree's title | String/element | '---' |\n|isLeaf | whether it's leaf node | bool | false |\n\n\n## note\n1. Optimization tips(when there are large amounts of data, like more than 5000 nodes)\n    - Do not Expand all nodes.\n    - Recommend not exist many `TreeSelect` components in a page at the same time.\n    - Recommend not use `treeCheckable` mode, or use `treeCheckStrictly`.\n2. In `treeCheckable` mode, It has the same effect when click `x`(node in Selection box) or uncheck in the treeNode(in dropdown panel), but the essence is not the same. So, even if both of them trigger `onChange` method, but the parameters (the third parameter) are different. （中文：在`treeCheckable`模式下，已选择节点上的`x`删除操作、和相应 treeNode 节点上 checkbox 的 uncheck 操作，最终效果相同，但本质不一样。前者跟弹出的 tree 组件可以“毫无关系”（例如 dropdown 没展开过，tree 也就没渲染好），而后者是 tree 组件上的节点 uncheck 事件。所以、即便两者都会触发`onChange`方法、但它们的参数（第三个参数）是不同的。）\n\n## Test Case\n\nhttp://localhost:8000/tests/runner.html?coverage\n\n## Coverage\n\nhttp://localhost:8000/node_modules/rc-server/node_modules/node-jscover/lib/front-end/jscoverage.html?w=http://localhost:8000/tests/runner.html?coverage\n\n## License\n\nrc-tree-select is released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/react-component/tree-select.git"
  },
  "scripts": {
    "build": "rc-tools run build",
    "chrome-test": "rc-tools run chrome-test",
    "coverage": "jest --coverage && cat ./coverage/lcov.info | coveralls",
    "gh-pages": "rc-tools run gh-pages",
    "karma": "rc-tools run karma",
    "lint": "rc-tools run lint",
    "pub": "rc-tools run pub",
    "saucelabs": "rc-tools run saucelabs",
    "start": "rc-tools run server",
    "test": "jest"
  },
  "version": "1.8.7"
}
