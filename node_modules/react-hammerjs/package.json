{
  "_args": [
    [
      {
        "raw": "react-hammerjs@~0.5.0",
        "scope": null,
        "escapedName": "react-hammerjs",
        "name": "react-hammerjs",
        "rawSpec": "~0.5.0",
        "spec": ">=0.5.0 <0.6.0",
        "type": "range"
      },
      "E:\\reactnews\\node_modules\\rc-tabs"
    ]
  ],
  "_from": "react-hammerjs@>=0.5.0 <0.6.0",
  "_id": "react-hammerjs@0.5.0",
  "_inCache": true,
  "_location": "/react-hammerjs",
  "_nodeVersion": "6.2.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/react-hammerjs-0.5.0.tgz_1467986787397_0.48569112410768867"
  },
  "_npmUser": {
    "name": "jedwatson",
    "email": "jed.watson@me.com"
  },
  "_npmVersion": "3.9.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-hammerjs@~0.5.0",
    "scope": null,
    "escapedName": "react-hammerjs",
    "name": "react-hammerjs",
    "rawSpec": "~0.5.0",
    "spec": ">=0.5.0 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rc-tabs"
  ],
  "_resolved": "https://registry.npmjs.org/react-hammerjs/-/react-hammerjs-0.5.0.tgz",
  "_shasum": "aa20e5c5f44d660f3e8e87ed11282f12173e77ae",
  "_shrinkwrap": null,
  "_spec": "react-hammerjs@~0.5.0",
  "_where": "E:\\reactnews\\node_modules\\rc-tabs",
  "author": {
    "name": "Jed Watson"
  },
  "browserify-shim": {
    "react": "global:React",
    "react-dom": "global:ReactDOM"
  },
  "bugs": {
    "url": "https://github.com/JedWatson/react-hammerjs/issues"
  },
  "dependencies": {
    "hammerjs": "^2.0.8"
  },
  "description": "ReactJS / HammerJS integration. Support touch events in your React app.",
  "devDependencies": {
    "browserify": "^13.0.1",
    "browserify-shim": "^3.8.12",
    "chalk": "^1.1.3",
    "del": "^2.2.1",
    "gulp": "^3.9.1",
    "gulp-bump": "^2.2.0",
    "gulp-git": "^1.8.0",
    "gulp-rename": "^1.2.2",
    "gulp-streamify": "^1.0.2",
    "gulp-uglify": "^1.5.4",
    "gulp-util": "^3.0.7",
    "merge-stream": "^1.0.0",
    "react": "^15.2.0",
    "react-dom": "^15.2.0",
    "vinyl-source-stream": "^1.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "aa20e5c5f44d660f3e8e87ed11282f12173e77ae",
    "tarball": "https://registry.npmjs.org/react-hammerjs/-/react-hammerjs-0.5.0.tgz"
  },
  "gitHead": "f94ce24282f757d4112de01dee6d233b31725637",
  "homepage": "https://github.com/JedWatson/react-hammerjs#readme",
  "keywords": [
    "react",
    "react-component",
    "tap",
    "tappable",
    "touch",
    "hammer",
    "hammerjs",
    "mobile"
  ],
  "license": "MIT",
  "main": "src/Hammer.js",
  "maintainers": [
    {
      "name": "jedwatson",
      "email": "jed.watson@me.com"
    }
  ],
  "name": "react-hammerjs",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.3 || ^15.0.0"
  },
  "readme": "React-HammerJS\n==============\n\n[ReactJS](http://facebook.github.io/react/) / [HammerJS](http://hammerjs.github.io) integration. Support touch events in your React app.\n\nIf you're looking for native tap event handling in ReactJS, check out my [react-tappable](https://github.com/JedWatson/react-tappable) package.\n\n\n## Installation\n\nThe easiest way to use React-HammerJS is to install it from NPM and include it in your own React build process (using [Browserify](http://browserify.org), etc).\n\nYou can also use the standalone build by including `dist/hammer.js` in your page. If you use this, make sure you have already included React, and it is available as a global variable.\n\n```\nnpm install react-hammerjs --save\n```\n\n\n## Usage\n\nReact-HammerJS wraps a React component, binding Hammer events to it so it can fire the handlers specified.\n\n## Properties\n\nThe following events are supported:\n\n* `onTap`\n* `onDoubleTap`\n* `onPan`\n* `onPanCancel`\n* `onPanEnd`\n* `onPanStart`\n* `onPinch`\n* `onPinchCancel`\n* `onPinchEnd`\n* `onPinchIn`\n* `onPinchOut`\n* `onPinchStart`\n* `onPress`\n* `onPressUp`\n* `onRotate`\n* `onRotateCancel`\n* `onRotateEnd`\n* `onRotateMove`\n* `onRotateStart`\n* `onSwipe`\n\nYou can also provide an `action` property which is like the `onTap` event handler but will also be fired `onPress`.\n\nIf you provide the prop `direction` the `pan` and `swipe` events will support `Hammer.DIRECTION_(NONE/LEFT/RIGHT/UP/DOWN/HORIZONTAL/VERTICAL/ALL)`.\n\nThe `options` property can be used to configure the Hammer manager. These properties will be merged with the default ones.\n\n### Example\n\n```\nvar Hammer = require('react-hammerjs');\n\n// Default options\n<Hammer onTap={handleTap} onSwipe={handleSwipe}><div>Tap Me</div></Hammer>\n\n// Custom options\nvar options = {\n    touchAction:'compute',\n    recognizers: {\n        tap: {\n            time: 600,\n            threshold: 100\n        }\n    }\n};\n\n<Hammer onTap={handleTap} options={options}><div>Tap Me</div></Hammer>\n```\n\n# Disabled Events\n\nAs a default, the `pinch` and `rotate` events are disabled in hammer.js, as they would make actions on an element \"blocking\". You may enable these events using the options object which is a attribute on the react `<Hammer>` element.\n\nFor example, to activate the `pinch` event on a `canvas` element:\n\n```\n<Hammer\n    onPinch={handlePinch}\n    options={{\n       recognizers: {\n          pinch: { enable: true }\n       }\n    }}>\n    <canvas></canvas>\n</Hammer>\n```\n\nDisabled events are detailed in the hammer.js api documentation:\n- http://hammerjs.github.io/recognizer-rotate/\n- http://hammerjs.github.io/recognizer-pinch/\n\n# License\n\nMIT Licensed. Copyright (c) Jed Watson 2016.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/JedWatson/react-hammerjs.git"
  },
  "scripts": {
    "build": "NODE_ENV=production gulp build",
    "bump": "gulp bump",
    "bump:major": "gulp bump:major",
    "bump:minor": "gulp bump:minor",
    "release": "gulp publish:tag && gulp publish:npm",
    "test": "echo \"no tests yet\" && exit 0"
  },
  "version": "0.5.0"
}
